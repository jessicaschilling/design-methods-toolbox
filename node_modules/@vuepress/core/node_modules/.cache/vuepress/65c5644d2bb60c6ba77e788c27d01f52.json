{"remainingRequest":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jessicaschilling/code/design-methods-toolbox/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jessicaschilling/code/design-methods-toolbox/docs/tools/primary-research.md?vue&type=template&id=2043c026&","dependencies":[{"path":"/Users/jessicaschilling/code/design-methods-toolbox/docs/tools/primary-research.md","mtime":1613601636352},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/cache-loader/dist/cjs.js","mtime":1613587018354},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1613587018634},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/cache-loader/dist/cjs.js","mtime":1613587018354},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/vue-loader/lib/index.js","mtime":1613587018634},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/@vuepress/markdown-loader/index.js","mtime":1613587018628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJwcmltYXJ5LXJlc2VhcmNoIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3ByaW1hcnktcmVzZWFyY2giPiM8L2E+IFByaW1hcnkgUmVzZWFyY2g8L2gxPgo8aDMgaWQ9InBoYXNlLfCflI4tcHJvYmxlbS1zZWVraW5nLWZvY3VzLWxhbmRzY2FwZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwaGFzZS3wn5SOLXByb2JsZW0tc2Vla2luZy1mb2N1cy1sYW5kc2NhcGUiPiM8L2E+IDxlbT5QaGFzZTo8L2VtPiDwn5SOIFByb2JsZW0gc2Vla2luZzxici8+IDxlbT5Gb2N1czo8L2VtPiBMYW5kc2NhcGU8L2gzPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgdGlwIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5JTiBCUklFRjwvcD4KPHA+PHN0cm9uZz5UaW1lIGNvbW1pdG1lbnQ6PC9zdHJvbmc+IFZhcnlpbmcgYWNjb3JkaW5nIHRvIHNjb3BlIG9mIHJlc2VhcmNoIG5lZWRlZCwgYnV0IHZlcnkgdGltZS1pbnRlbnNpdmUgZHVlIHRvIG5lZWRzIG9mIGludGVydmlld2luZzxicj4KPHN0cm9uZz5EaWZmaWN1bHR5Ojwvc3Ryb25nPiBNb2RlcmF0ZTxicj4KPHN0cm9uZz5NYXRlcmlhbHMgbmVlZGVkOjwvc3Ryb25nPiBHb2FscyBmb3Igb3V0Y29tZSwgaW50ZXJ2aWV3IGd1aWRlLCB1c2VycyB0byBpbnRlcnZpZXcsIGxvY2F0aW9uIChwaHlzaWNhbCBvciB2aXJ0dWFsKSwgaW50ZXJ2aWV3ZXIsIG5vdGV0YWtlciwgbm90ZXRha2luZyB0b29sczxicj4KPHN0cm9uZz5XaG8gc2hvdWxkIHBhcnRpY2lwYXRlOjwvc3Ryb25nPiBVc2VyIGV4cGVyaWVuY2UgZGVzaWduZXJzLCBkZXZlbG9wZXJzLCBwcm9qZWN0L3Byb2R1Y3Qgb3duZXJzLCB1c2VycywgY29tbW11bml0eSBzcGVjaWFsaXN0czxicj4KPHN0cm9uZz5CZXN0IGZvcjo8L3N0cm9uZz4gSW4tZGVwdGggaW5zaWdodHMgb24gdGhlIG92ZXJhbGwgbGFuZHNjYXBlIG9mIHNvbHV0aW9ucyAob3IgbGFjayB0aGVyZW9mKSBmcm9tIHRoZSB1c2VyJ3MgcGVyc3BlY3RpdmU8L3A+CjwvZGl2Pgo8aDIgaWQ9ImFib3V0LXRoaXMtdG9vbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhYm91dC10aGlzLXRvb2wiPiM8L2E+IEFib3V0IHRoaXMgdG9vbDwvaDI+CjxwPldoZW4gc3RhcnRpbmcgYSBwcm9qZWN0LCBtdWNoIGNhbiBiZSBnbGVhbmVkIGZyb20gY29tcGV0aXRpdmUgYW5hbHlzaXMgb3IgYSBsb29rIGF0IHRoZSBvdmVyYWxsIHByb2R1Y3Qgb3IgdGVjaG5pY2FsIGxhbmRzY2FwZSDigJQgYnV0IGZyb20gYSB1c2VyLWNlbnRlcmVkIHBlcnNwZWN0aXZlLCB0aGUgcHJpbWFyeSByZXNlYXJjaCBpbiBhbnkgZGVzaWduIGFjdGl2aXR5IG11c3QgYmUgdXNlciByZXNlYXJjaC4gV2hpbGUgcXVhbnRpdGF0aXZlIG1ldGhvZHMgbGlrZSBudW1lcmljYWwgc3VydmV5aW5nIGFuZCBwYXNzaXZlIFthbmFseXRpY3NdKGFuYWx5dGljcy5tZH0gYXJlIGNlcnRhaW5seSBoZWxwZnVsIGluIGluaXRpYWwgdXNlciByZXNlYXJjaCBmb3IgaW52ZXN0aWdhdGluZyBxdWVzdGlvbnMgYWxvbmcgdGhlIGxpbmVzIG9mICZxdW90O2hvdyBtdWNoJnF1b3Q7IGFuZCAmcXVvdDtob3cgbWFueSZxdW90OywgcXVhbGl0YXRpdmUgbWV0aG9kcyDigJQgZXZlbiBpZiB0aGV5J3JlIGFzIHVubW9kZXJhdGVkIGFzIGFuIG9wZW4tZW5kZWQgc3VydmV5IHF1ZXN0aW9uIOKAlCBoZWxwIHJldmVhbCB0aGUgY29tcGxleGl0eSBvZiBhIHBhcnRpY3VsYXIgc2l0dWF0aW9uIGFuZCBlbmNvdXJhZ2UgYXJlYXMgZm9yIGRpZ2dpbmcgaW4gZGVlcGVyIGF0IGFuIGVhcmx5IHN0YWdlIG9mIGEgcHJvamVjdC48L3A+CjxwPkRlcGVuZGluZyBvbiB0aGUgbmF0dXJlIG9mIHlvdXIgcHJvamVjdCwgeW91ciBidWRnZXQgYW5kIHlvdXIgdGltZWZyYW1lLCBvbmUgb3IgbW9yZSBvZiB0aGUgZm9sbG93aW5nIHF1YWxpdGF0aXZlIHVzZXIgcmVzZWFyY2ggbWV0aG9kcyBtYXkgYmUgaGVscGZ1bCAoY2hlY2sgdGhlICZxdW90O2V4dGVybmFsIHJlc291cmNlcyZxdW90OyBzZWN0aW9uIGZvciBtb3JlIGRldGFpbHMgb24gaW5kaXZpZHVhbCBtZXRob2RzKTo8L3A+Cjx1bD4KPGxpPkV4cGxvcmF0b3J5IHVzZXIgaW50ZXJ2aWV3czogT3Blbi1lbmRlZCwgY29udmVyc2F0aW9uYWwgaW50ZXJ2aWV3cyAob2Z0ZW4gYW4gaG91ciBvciBtb3JlKSB3aXRoIHVzZXJzIGZyb20gYSB2YXJpZXR5IG9mIGJhY2tncm91bmRzIGFuZCB2YW50YWdlIHBvaW50cy4gV2hpbGUgbGVkIGJ5IGFuIGluaXRpYWwgcXVlc3Rpb24gc2V0LCBvcGVuIHRvIGdvaW5nICZxdW90O29mZi1jb3Vyc2UmcXVvdDsgdG8gc3VyZmFjZSBhZGRpdGlvbmFsIGluc2lnaHRzLjwvbGk+CjxsaT5FeHBlcnQgaW50ZXJ2aWV3OiBBZ2FpbiwgYW4gb3Blbi1lbmRlZCwgY29udmVyc2F0aW9uYWwgaW50ZXJ2aWV3LCBidXQgd2l0aCByZWxldmFudCBzdWJqZWN0LW1hdHRlciBleHBlcnRzLiBJdCBtYXkgYmUgbW9yZSBkaWZmaWN1bHQgdG8gZmluZCBleHBlcnRzIHRoYW4gb3JkaW5hcnkgdXNlcnMsIGJ1dCB0aGV5IG1heSBoYXZlIGltcG9ydGFudCBpbnB1dCBvbiB0aGUgc29ydHMgb2Ygc29sdXRpb25zIHRoZXkgbWF5IChvciBtYXkgbm90ISkganVtcCB0byBpbiByZXNwb25zZSB0byB5b3VyIHF1ZXN0aW9ucy48L2xpPgo8bGk+RXh0cmVtZSBpbnRlcnZpZXc6IEFnYWluLCBhbiBvcGVuLWVuZGVkLCBjb252ZXJzYXRpb25hbCBpbnRlcnZpZXcsIGJ1dCB3aXRoIHVzZXIgdHlwZXMgeW91J3ZlIGlkZW50aWZpZWQgYXMgZWRnZSBjYXNlcy4gU3BlYWtpbmcgd2l0aCB0aGVzZSBpbmRpdmlkdWFscyBlYXJseSBvbiB3aWxsIGhlbHAgeW91IGdhaW4gYSBiZXR0ZXIgaWRlYSBvZiBob3cgbXVjaCBhbGxvd2FuY2UgbmVlZHMgdG8gYmUgbWFkZSBmb3IgZWRnZSBjYXNlcyByaWdodCBvZmYgdGhlIGJhdCwgYXMgd2VsbCBhcyBzdWdnZXN0IGFwcHJvYWNoZXMgdGhhdCBzZXJ2ZSBhbGwgd2hpbGUgYWxzbyBkaXJlY3RseSBiZW5lZml0aW5nIGVkZ2UtY2FzZSB1c2Vycy48L2xpPgo8bGk+Rm9jdXMgZ3JvdXA6IEEgc2ltaWxhciBvcGVuLWVuZGVkIGludGVydmlldywgYnV0IGluIGEgc21hbGwtZ3JvdXAgZm9ybWF0LiBCZSBhd2FyZTogVGhlcmUncyBhbHdheXMgdGhlIHJpc2sgdGhhdCBvbmUgcGVyc29uIHdpbGwgb3V0LXRhbGsgdGhlIGVudGlyZSBncm91cCwgb3IgdGhhdCBwYXJ0aWNpcGFudHMgd2lsbCBiZSBhZnJhaWQgdG8gc2hhcmUgdGhlaXIgdHJ1ZSBmZWVsaW5ncyBpbiBhIGdyb3VwIGNvbnRleHQuPC9saT4KPGxpPkV4cGVydCBwYW5lbDogRXNzZW50aWFsbHkgYSBmb2N1cyBncm91cCBtYWRlIHVwIG9mIGV4cGVydHMg4oCUIHdpdGggdGhlIHNhbWUgcmlza3Mgb2YgYSByZWd1bGFyIGZvY3VzIGdyb3VwLCBidXQgd2l0aCB0aGUgcG9zc2liaWxpdHkgb2YgcmljaCBkaXNjdXNzaW9uIHRoYXQgb25seSBhIGRpc2N1c3Npb24gYmV0d2VlbiBleHBlcnRzIGNhbiBwcm92aWRlLjwvbGk+CjxsaT5BbmFsb2dvdXMgZXhwZXJpZW5jZSBpbnRlcnZpZXc6IEFuIGV4cGxvcmF0b3J5IGludGVydmlldywgYnV0IHdpdGggc29tZW9uZSB3aG8gZXhwZXJpZW5jZXMgc2ltaWxhciBjaGFsbGVuZ2VzL29wcG9ydHVuaXRpZXMgaW4gYSBkaWZmZXJlbnQgcGVyc29uYWwgb3IgcHJvZmVzc2lvbmFsIGNvbnRleHQuIEZvciBleGFtcGxlLCBhbiBldmVudCBwbGFubmVyIG1heSBoYXZlIGEgbG90IHRvIGxlYXJuIGZyb20gYSBob3NwaXRhbCBtYW5hZ2VyIGR1ZSB0byB0aGUgZmFjdCB0aGF0IGJvdGggaW5kaXZpZHVhbHMgYW5kIHRoZWlyIGNsaWVudHMgcmVseSBoZWF2aWx5IG9uIHNlcXVlbnRpYWwsIGhpZ2gtcHJpb3JpdHkgdGFza3Mgd2l0aCBsaXR0bGUgb3Bwb3J0dW5pdHkgZm9yIHJlZHVuZGFuY3kgb3IgY29udGluZ2VuY3kgcGxhbm5pbmcuPC9saT4KPGxpPkVtcGF0aHkgaW50ZXJ2aWV3OiBBbiBleHBsb3JhdG9yeSBpbnRlcnZpZXcsIGJ1dCB3aGVyZSB0aGUgZm9jdXMgaXMgbW9yZSBvbiB0aGUgZmVlbGluZ3MgdGhlIHVzZXIgZXhwZXJpZW5jZXMgZHVyaW5nIHRoZSB0YXNrIGF0IGhhbmQgdGhhbiBhY3R1YWwgY29tcGxldGlvbiBvZiB0aGUgdGFza3MuIFRob3VnaCBxdWVzdGlvbnMgbWF5IGVsaWNpdCBkaXJlY3QsIGV2ZW4gcXVhbnRpdGF0aXZlIGFuc3dlcnMsIHRoZSBjb250ZXh0IG9mIHRoZSBhbnN3ZXJzIGFuZCB0aGUgZW1vdGlvbnMgd2l0aCB3aGljaCB0aGV5IGFyZSBkZWxpdmVyZWQgYXJlIGtleS48L2xpPgo8bGk+U3VydmV5czogVGhlc2UgY2FuIGJlIGFuIGV4Y2VsbGVudCBtZWFucyBvZiBjb21iaW5pbmcgcXVhbGl0YXRpdmUgYW5kIHF1YW50aXRhdGl2ZSByZXNlYXJjaCwgaWYgZGVzaWduZWQgd2VsbC4gSG93ZXZlciwga2VlcCBpbiBtaW5kIHRoYXQgYmVjYXVzZSB5b3UncmUgbGFja2luZyBhIG1vZGVyYXRvciBvciBpbnRlcnZpZXdlciwgeW91J2xsIG1pc3MgdGhlIG9wcG9ydHVuaXR5IHRvIDxSb3V0ZXJMaW5rIHRvPSIvdG9vbHMvZml2ZS13aHlzLmh0bWwiPmNvbnRpbnVlIHRvIHByb2JlPC9Sb3V0ZXJMaW5rPiBpZiBhbiBhbnN3ZXIgc2VlbXMgcGFydGljdWxhcmx5IGNvbXBlbGxpbmcuIChTdXJ2ZXlzIGRvbid0IGhhdmUgdG8gYmUgZm9ybWFsLiBMdXJraW5nIGFuZC9vciBhc2tpbmcgcXVlc3Rpb25zIGluIGZvcnVtcywgZm9yIGV4YW1wbGUsIGlzIGp1c3QgYW5vdGhlciBzb3J0IG9mIHN1cnZleS4pPC9saT4KPC91bD4KPHA+VGhlIGxpbmVzIGJldHdlZW4gdXNlciByZXNlYXJjaCBhbmQgdXNlciB0ZXN0aW5nIOKAlCBvciwgYXQgbWluaW11bSwgdGhlIHR5cGVzIG9mIG1ldGhvZHMgaW52b2x2ZWQg4oCUIGNhbiBibHVyIHN1YnN0YW50aWFsbHksIHNvIHlvdSBtYXkgYWxzbyB3YW50IHRvIGxvb2sgdGhyb3VnaCB0aGUgZ3VpZGVzIHRvIDxSb3V0ZXJMaW5rIHRvPSIvdG9vbHMvbW9kZXJhdGVkLXRlc3RpbmcuaHRtbCI+bW9kZXJhdGVkIHRlc3Rpbmc8L1JvdXRlckxpbms+IGFuZCA8Um91dGVyTGluayB0bz0iL3Rvb2xzL3VubW9kZXJhdGVkLXRlc3RpbmcuaHRtbCI+dW5tb2RlcmF0ZWQgdGVzdGluZzwvUm91dGVyTGluaz4gaW4gdGhpcyB0b29sYm94LiBGb3IgZXhhbXBsZSwgYW4gYWN0aXZpdHkgbGlrZSA8Um91dGVyTGluayB0bz0iL3Rvb2xzL2NhcmQtc29ydGluZy5odG1sIj5jYXJkIHNvcnRpbmc8L1JvdXRlckxpbms+IGNhbiB3b3JrIGVxdWFsbHkgd2VsbCB3aGVuIGRvaW5nIGFuIGluaXRpYWwgZXZhbHVhdGlvbiBvZiBhIHByb2R1Y3QvcHJvamVjdCBsYW5kc2NhcGUgYXMgaXQgY2FuIGxhdGVyIGluIHRoZSBkZXZlbG9wbWVudCBwcm9jZXNzLjwvcD4KPGgyIGlkPSJsaW5rcy1hbmQtcmVzb3VyY2VzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2xpbmtzLWFuZC1yZXNvdXJjZXMiPiM8L2E+IExpbmtzIGFuZCByZXNvdXJjZXM8L2gyPgo8dWw+CjxsaT48YSBocmVmPSJodHRwczovL3Rvb2xraXQubW96aWxsYS5vcmcvbWV0aG9kL2V4cGxvcmF0b3J5LWludGVydmlld3MvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5Nb3ppbGxhIGd1aWRlIHRvIGV4cGxvcmF0b3J5IGludGVydmlld3M8T3V0Ym91bmRMaW5rLz48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9kZXNpZ24tcmVzZWFyY2gtbWV0aG9kcy8xMi1kZXNpZ24tcmVzZWFyY2gtbWV0aG9kcy10by1nZXQtaW5zcGlyZWQtYnktdXNlcnMtY2FlNDc4OWEwOTRiIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5Sb3VuZHVwIG9mIHVzZXIgcmVzZWFyY2ggbWV0aG9kczxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudXNhYmlsaXR5Lmdvdi93aGF0LWFuZC13aHkvdXNlci1yZXNlYXJjaC5odG1sIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5MaXN0IG9mIHVzZXIgcmVzZWFyY2ggbWV0aG9kcyBpbGx1c3RyYXRpbmcgdGhlIG92ZXJsYXAgYmV0d2VlbiB1c2VyIHJlc2VhcmNoIGFuZCB1c2VyIHRlc3Rpbmc8T3V0Ym91bmRMaW5rLz48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnVzZXJ6b29tLmNvbS9ibG9nL3F1YW50aXRhdGl2ZS1hbmQtcXVhbGl0YXRpdmUtdXNlci1yZXNlYXJjaC1tZXRob2RzLWNvbXBsZXRlLWd1aWRlLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RGV0YWlsZWQgZ3VpZGUgdG8gYSB2YXJpZXR5IG9mIHVzZXIgcmVzZWFyY2ggbWV0aG9kczxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cubm5ncm91cC5jb20vYXJ0aWNsZXMvd2hpY2gtdXgtcmVzZWFyY2gtbWV0aG9kcy8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPk5pZWxzZW4gTm9ybWFuIEdyb3VwIG9uIHdoZW4gdG8gdXNlIHdoaWNoIHVzZXIgcmVzZWFyY2ggbWV0aG9kPE91dGJvdW5kTGluay8+PC9hPjwvbGk+CjwvdWw+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}