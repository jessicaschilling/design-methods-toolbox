{"remainingRequest":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jessicaschilling/code/design-methods-toolbox/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jessicaschilling/code/design-methods-toolbox/docs/README.md?vue&type=template&id=c6f5370e&","dependencies":[{"path":"/Users/jessicaschilling/code/design-methods-toolbox/docs/README.md","mtime":1613603963701},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/cache-loader/dist/cjs.js","mtime":1613587018354},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1613587018634},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/cache-loader/dist/cjs.js","mtime":1613587018354},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/vue-loader/lib/index.js","mtime":1613587018634},{"path":"/Users/jessicaschilling/code/design-methods-toolbox/node_modules/@vuepress/markdown-loader/index.js","mtime":1613587018628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}